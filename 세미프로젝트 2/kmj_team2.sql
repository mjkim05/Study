--■■■ 과목 테이블 생성 ■■■--
CREATE TABLE SUBJECTS
( SUB_CODE VARCHAR2(20) 
, SUB_NAME VARCHAR2(30)  CONSTRAINT SUB_NAME_NN NOT NULL
, CONSTRAINT SUBJECTS_SUB_CODE_PK PRIMARY KEY(SUB_CODE)
);
--==>>Table SUBJECTS이(가) 생성되었습니다.

--■■■ 강의실 테이블 생성 ■■■--
CREATE TABLE CLASSROOMS
( ROOM_CODE         VARCHAR2(20)
, ROOM_NAME         VARCHAR2(20)  CONSTRAINT CLASSROOMS_NAME_NN NOT NULL
, ROOM_EXPLANATION  VARCHAR2(100)
, CONSTRAINT CLASSROOMS_CODE_PK PRIMARY KEY(ROOM_CODE)
);
--==>> Table CLASSROOMS이(가) 생성되었습니다.

--■■■ 과정 테이블 생성 ■■■--
CREATE TABLE COURSES
( CRS_CODE  VARCHAR2(20)    
, CRS_NAME  VARCHAR2(100)    CONSTRAINT CRS_NAME_NN NOT NULL
, CONSTRAINT COURSES_CRS_CODE_PK PRIMARY KEY(CRS_CODE)
);
--==>> Table COURSES이(가) 생성되었습니다.

--■■■ 교재 테이블 생성 ■■■--
CREATE TABLE BOOKS
( BK_CODE           VARCHAR2(20)
, BK_NAME           VARCHAR2(100)    CONSTRAINT BOOKS_BK_NAME_NN NOT NULL
, BK_PRICE          NUMBER(6)        CONSTRAINT BOOKS_BK_PRICE_NN NOT NULL
, BK_EXPLANATION    VARCHAR2(100)
, CONSTRAINT BOOKS_BK_CODE_PK PRIMARY KEY(BK_CODE)
);
--==>> Table BOOKS이(가) 생성되었습니다.

--■■■ 중도탈락사유 테이블 생성 ■■■--
CREATE TABLE DROP_REASONS
( DO_REASON_CODE           VARCHAR2(20)
, DO_REASON                VARCHAR2(50)     CONSTRAINT REASONS_DO_REASON_NN NOT NULL
, CONSTRAINT REASON_DO_REASON_CODE_PK PRIMARY KEY(DO_REASON_CODE)
);
--==>> Table DROP_REASONS이(가) 생성되었습니다.

--■■■ 교수 테이블 생성 ■■■--
CREATE TABLE PROFESSORS
( PF_CODE   VARCHAR2(20)    
, PF_ID     VARCHAR2(20)    CONSTRAINT PF_ID_NN NOT NULL
, PF_PW     VARCHAR2(20)    CONSTRAINT PF_PW_NN NOT NULL
, PF_NAME   VARCHAR2(20)    CONSTRAINT PF_NAME_NN NOT NULL
, PF_SSN    VARCHAR(14)     CONSTRAINT PF_SSN_NN NOT NULL
, PF_DATE   DATE            DEFAULT SYSDATE
, CONSTRAINT PROFESSORS_PF_CODE_PK PRIMARY KEY(PF_CODE)
, CONSTRAINT PROFESSORS_PF_ID_UK UNIQUE(PF_ID)
, CONSTRAINT PROFESSORS_PF_PW_UK CHECK (LENGTH(PF_PW) >= 7 AND LENGTH(PF_PW) <= 20)
);
--==>> Table PROFESSORS이(가) 생성되었습니다.

--■■■ 관리자 테이블 생성 ■■■--
CREATE TABLE ADMINS
( AD_CODE   VARCHAR2(20)    
, AD_ID     VARCHAR2(20)    CONSTRAINT AD_ID_NN NOT NULL
, AD_PW     VARCHAR2(20)    CONSTRAINT AD_PW_NN NOT NULL
, AD_DATE   DATE            DEFAULT SYSDATE
, CONSTRAINT ADMINS_AD_CODE_PK PRIMARY KEY(AD_CODE)
, CONSTRAINT ADMINS_AD_ID_UK   UNIQUE(AD_ID)
, CONSTRAINT ADMINS_AD_PW_UK CHECK (LENGTH(AD_PW) >= 7 AND LENGTH(AD_PW) <= 20) 
);
--==>> Table ADMINS이(가) 생성되었습니다.

--■■■ 학생 테이블 생성 ■■■--
CREATE TABLE STUDENTS
( ST_CODE  VARCHAR2(20)
, ST_ID    VARCHAR2(20) CONSTRAINT ST_ID_NN NOT NULL
, ST_PW    VARCHAR2(20) CONSTRAINT ST_PW_NN NOT NULL
, ST_NAME  VARCHAR2(20) CONSTRAINT ST_NAME_NN NOT NULL
, ST_SSN   VARCHAR(14)  CONSTRAINT ST_SSN_NN NOT NULL
, ST_DATE  DATE         DEFAULT SYSDATE
, CONSTRAINT STUDENTS_ST_CODE_PK PRIMARY KEY(ST_CODE)
, CONSTRAINT STUDENTS_ST_ID_UK  UNIQUE(ST_ID)
, CONSTRAINT STUDENTS_ST_PW_CK CHECK (LENGTH(ST_PW) >= 7 AND LENGTH(ST_PW) <= 20)
);
--==>> Table STUDENTS이(가) 생성되었습니다.

--■■■ 개설과정 테이블생성 ■■■--
CREATE TABLE OPEN_COURSES
( OCRS_CODE         VARCHAR2(20)
, CRS_CODE          VARCHAR2(20)
, PF_CODE             VARCHAR2(20)
, ROOM_CODE         VARCHAR2(20)
, START_DATE        DATE    CONSTRAINT COURSES_START_DATE_NN NOT NULL
, END_DATE          DATE    CONSTRAINT COURSES_END_DATE_NN NOT NULL
, CONSTRAINT OCRS_OCRS_CODE_PK PRIMARY KEY(OCRS_CODE)
, CONSTRAINT OCRS_CRS_CODE_FK FOREIGN KEY(CRS_CODE) REFERENCES COURSES(CRS_CODE)
, CONSTRAINT OCRS_PF_ID_FK FOREIGN KEY(PF_CODE) REFERENCES PROFESSORS(PF_CODE)
, CONSTRAINT OCRS_ROOM_CODE_FK FOREIGN KEY(ROOM_CODE) REFERENCES CLASSROOMS(ROOM_CODE)
);
--==>> Table OPEN_COURSES이(가) 생성되었습니다.

--■■■ 수강신청 테이블생성 ■■■--
CREATE TABLE COURSE_REGISTRATIONS
( REG_CODE          VARCHAR2(20)
, ST_CODE           VARCHAR2(20)
, OCRS_CODE         VARCHAR2(20)
, REG_DATE          DATE        DEFAULT SYSDATE
, CONSTRAINT COURSE_REG_REG_CODE_PK PRIMARY KEY(REG_CODE)

, CONSTRAINT COURSE_REG_ST_CODE_FK  FOREIGN KEY(ST_CODE)
        REFERENCES STUDENTS(ST_CODE)
        
, CONSTRAINT COURSE_REG_OCRS_CODE_FK  FOREIGN KEY(OCRS_CODE)
        REFERENCES OPEN_COURSES(OCRS_CODE)
);
--==>> Table COURSE_REGISTRATIONS이(가) 생성되었습니다.

--■■■ 중도탈락 테이블생성 ■■■--
CREATE TABLE DROP_OUT_LISTS
( DO_CODE           VARCHAR2(20)   
, REG_CODE          VARCHAR2(20) 
, DO_REASON_CODE    VARCHAR2(20) 
, DO_DATE           DATE DEFAULT SYSDATE
, CONSTRAINT DO_LISTS_DO_CODE_PK PRIMARY KEY(DO_CODE)
, CONSTRAINT DO_LISTS_REG_CODE_FK FOREIGN KEY(REG_CODE)
                REFERENCES COURSE_REGISTRATIONS(REG_CODE)
, CONSTRAINT DO_LISTS_DO_REASON_CODE_FK FOREIGN KEY(DO_REASON_CODE)
                REFERENCES DROP_REASONS(DO_REASON_CODE)
);
--==>> Table DROP_OUT_LISTS이(가) 생성되었습니다.

--■■■ 개설과목 테이블생성 ■■■--
CREATE TABLE OPEN_SUBJECTS
( OSUB_CODE             VARCHAR(20)
, OCRS_CODE             VARCHAR(20)
, SUB_CODE              VARCHAR(20) 
, BK_CODE               VARCHAR(20)
, SUB_START_DATE        DATE        CONSTRAINT OPEN_SUBJECTS_SSD_NN NOT NULL
, SUB_END_DATE          DATE        CONSTRAINT OPEN_SUBJECTS_SED_NN NOT NULL
, ATTENDANCE_SCORE      NUMBER(3)   CONSTRAINT OPEN_SUBJECTS_AS_NN NOT NULL
, WRITTEN_SCORE         NUMBER(3)   CONSTRAINT OPEN_SUBJECTS_WS_NN NOT NULL
, PRACTICAL_SCORE       NUMBER(3)   CONSTRAINT OPEN_SUBJECTS_PS_NN NOT NULL
, CONSTRAINT OPEN_SUBJECTS_OSUB_CODE_PK PRIMARY KEY(OSUB_CODE)
, CONSTRAINT ATTENDANCE_SCORE CHECK(ATTENDANCE_SCORE BETWEEN 0 AND 100)
, CONSTRAINT WRITTEN_SCORE CHECK(WRITTEN_SCORE BETWEEN 0 AND 100)
, CONSTRAINT PRACTICAL_SCORE CHECK(PRACTICAL_SCORE BETWEEN 0 AND 100)
, CONSTRAINT OCRS_CODE_FK FOREIGN KEY(OCRS_CODE) REFERENCES OPEN_COURSES(OCRS_CODE)
, CONSTRAINT SUB_CODE_FK FOREIGN KEY(SUB_CODE) REFERENCES SUBJECTS(SUB_CODE)
, CONSTRAINT BK_CODE_FK FOREIGN KEY(BK_CODE) REFERENCES BOOKS(BK_CODE)
);
--==>> Table OPEN_SUBJECTS이(가) 생성되었습니다.

--■■■ 성적 테이블 생성 ■■■--
CREATE TABLE SCORES
( SCORE_CODE            VARCHAR2(20)
, REG_CODE              VARCHAR2(20)
, OSUB_CODE             VARCHAR2(20)
, ATTENDANCE_SCORE      NUMBER(3)   CONSTRAINT ATTENDANCE_SCORE_NN NOT NULL
, WRITTEN_SCORE         NUMBER(3)   CONSTRAINT WRITTEN_SCORE_NN NOT NULL
, PRACTICAL_SCORE       NUMBER(3)   CONSTRAINT PRACTICAL_SCORE_NN NOT NULL
, TEST_DATE             DATE        CONSTRAINT TEST_DATE_NN NOT NULL
, CONSTRAINT SCORES_SCORE_CODE_PK PRIMARY KEY(SCORE_CODE)
, CONSTRAINT SCORES_REG_CODE_FK FOREIGN KEY(REG_CODE)
             REFERENCES COURSE_REGISTRATIONS(REG_CODE)
, CONSTRAINT SCORES_OSUB_CODE_FK FOREIGN KEY(OSUB_CODE)
             REFERENCES OPEN_SUBJECTS(OSUB_CODE)
, CONSTRAINT SCORES_ATTENDANCE_SCORE_CK CHECK (ATTENDANCE_SCORE BETWEEN 0 AND 100)
, CONSTRAINT SCORES_WRITTEN_SCORE_CK CHECK (WRITTEN_SCORE BETWEEN 0 AND 100)
, CONSTRAINT SCORES_PRACTICAL_SCORE_CK CHECK (PRACTICAL_SCORE BETWEEN 0 AND 100)
);
--==>> Table SCORES이(가) 생성되었습니다.

SELECT *
FROM TAB;
--==>>
/*
ADMINS	                TABLE	
BOOKS	                TABLE	
CLASSROOMS	            TABLE	
COURSES	                TABLE	
COURSE_REGISTRATIONS	TABLE	
DROP_OUT_LISTS	        TABLE	
DROP_REASONS	        TABLE	
OPEN_COURSES	        TABLE	
OPEN_SUBJECTS	        TABLE	
PROFESSORS	            TABLE	
SCORES	                TABLE	
STUDENTS	            TABLE	
SUBJECTS	            TABLE	
*/

-- 테이블 커멘트 작성

SELECT *
FROM USER_TAB_COMMENTS;

COMMENT ON TABLE SUBJECTS IS '과목 정보';
COMMENT ON COLUMN SUBJECTS.SUB_CODE IS '과목 코드';
COMMENT ON COLUMN SUBJECTS.SUB_NAME IS '과목명';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'SUBJECTS';

COMMENT ON TABLE COURSES IS '과정 정보';
COMMENT ON COLUMN COURSES.CRS_CODE IS '과정 코드';
COMMENT ON COLUMN COURSES.CRS_NAME IS '과정명';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'COURSES';

COMMENT ON TABLE ADMINS IS '관리자 정보';
COMMENT ON COLUMN ADMINS.AD_CODE IS '관리자 코드';
COMMENT ON COLUMN ADMINS.AD_ID IS '관리자ID';
COMMENT ON COLUMN ADMINS.AD_PW IS '관리자PW';
COMMENT ON COLUMN ADMINS.AD_DATE IS '등록일';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'ADMINS';

COMMENT ON TABLE PROFESSORS IS '교수 정보';
COMMENT ON COLUMN PROFESSORS.PF_CODE IS '교수 코드';
COMMENT ON COLUMN PROFESSORS.PF_ID IS '교수ID';
COMMENT ON COLUMN PROFESSORS.PF_PW IS '교수PW';
COMMENT ON COLUMN PROFESSORS.PF_NAME IS '교수명';
COMMENT ON COLUMN PROFESSORS.PF_SSN IS '주민등록번호';
COMMENT ON COLUMN PROFESSORS.PF_DATE IS '등록일';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'PROFESSORS';

COMMENT ON TABLE OPEN_COURSES IS '개설과정 정보';
COMMENT ON COLUMN OPEN_COURSES.OCRS_CODE IS '개설과정 코드';
COMMENT ON COLUMN OPEN_COURSES.START_DATE IS '과정 시작일';
COMMENT ON COLUMN OPEN_COURSES.END_DATE IS '과정 종료일';
COMMENT ON COLUMN OPEN_COURSES.CRS_CODE IS '과정 코드';
COMMENT ON COLUMN OPEN_COURSES.PF_CODE IS '교수 코드';
COMMENT ON COLUMN OPEN_COURSES.ROOM_CODE IS '강의실 코드';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'OPEN_COURSES';

COMMENT ON TABLE OPEN_SUBJECTS IS '개설과목 정보';
COMMENT ON COLUMN OPEN_SUBJECTS.OCRS_CODE IS '개설과정 코드';
COMMENT ON COLUMN OPEN_SUBJECTS.OSUB_CODE IS '개설과목 코드';
COMMENT ON COLUMN OPEN_SUBJECTS.SUB_CODE IS '과목 코드';
COMMENT ON COLUMN OPEN_SUBJECTS.BK_CODE IS '교재 코드';
COMMENT ON COLUMN OPEN_SUBJECTS.SUB_START_DATE IS '과목 시작일';
COMMENT ON COLUMN OPEN_SUBJECTS.SUB_END_DATE IS '과목 종료일';
COMMENT ON COLUMN OPEN_SUBJECTS.ATTENDANCE_SCORE IS '출결 배점';
COMMENT ON COLUMN OPEN_SUBJECTS.WRITTEN_SCORE IS '필기 배점';
COMMENT ON COLUMN OPEN_SUBJECTS.PRACTICAL_SCORE IS '실기 배점';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'OPEN_SUBJECTS';

COMMENT ON TABLE BOOKS IS '교재 정보';
COMMENT ON COLUMN BOOKS.BK_CODE IS '교재 코드';
COMMENT ON COLUMN BOOKS.BK_NAME IS '교재명';
COMMENT ON COLUMN BOOKS.BK_PRICE IS '교재 가격';
COMMENT ON COLUMN BOOKS.BK_EXPLANATION IS '교재 설명';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'BOOKS';

COMMENT ON TABLE STUDENTS IS '학생 정보';
COMMENT ON COLUMN STUDENTS.ST_CODE IS '학생 코드';
COMMENT ON COLUMN STUDENTS.ST_ID IS '학생 ID';
COMMENT ON COLUMN STUDENTS.ST_PW IS '학생 PW';
COMMENT ON COLUMN STUDENTS.ST_NAME IS '학생 이름';
COMMENT ON COLUMN STUDENTS.ST_SSN IS '주민등록번호';
COMMENT ON COLUMN STUDENTS.ST_DATE IS '등록일';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'STUDENTS';

COMMENT ON TABLE COURSE_REGISTRATIONS IS '수강신청 정보';
COMMENT ON COLUMN COURSE_REGISTRATIONS.REG_CODE IS '수강신청 코드';
COMMENT ON COLUMN COURSE_REGISTRATIONS.ST_CODE IS '학생 코드';
COMMENT ON COLUMN COURSE_REGISTRATIONS.OCRS_CODE IS '개설과정 코드';
COMMENT ON COLUMN COURSE_REGISTRATIONS.REG_DATE IS '수강신청일';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'COURSE_REGISTRATIONS';

COMMENT ON TABLE CLASSROOMS IS '강의실 정보';
COMMENT ON COLUMN CLASSROOMS.ROOM_CODE IS '강의실 코드';
COMMENT ON COLUMN CLASSROOMS.ROOM_NAME IS '강의실명';
COMMENT ON COLUMN CLASSROOMS.ROOM_EXPLANATION IS '강의실 설명';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'CLASSROOMS';

COMMENT ON TABLE DROP_REASONS IS '중도탈락 사유 정보';
COMMENT ON COLUMN DROP_REASONS.DO_REASON_CODE IS '중도탈락사유 코드';
COMMENT ON COLUMN DROP_REASONS.DO_REASON IS '중도탈락 사유';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'DROP_REASONS';

COMMENT ON TABLE DROP_OUT_LISTS IS '중도탈락 정보';
COMMENT ON COLUMN DROP_OUT_LISTS.DO_CODE IS '중도탈락 코드';
COMMENT ON COLUMN DROP_OUT_LISTS.REG_CODE IS '수강신청 코드';
COMMENT ON COLUMN DROP_OUT_LISTS.DO_REASON_CODE IS '중도탈락사유 코드';
COMMENT ON COLUMN DROP_OUT_LISTS.DO_DATE IS '중도탈락일';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'DROP_OUT_LISTS';

COMMENT ON TABLE SCORES IS '성적 정보';
COMMENT ON COLUMN SCORES.SCORE_CODE IS '성적 코드';
COMMENT ON COLUMN SCORES.REG_CODE IS '수강신청 코드';
COMMENT ON COLUMN SCORES.OSUB_CODE IS '개설과목 코드';
COMMENT ON COLUMN SCORES.ATTENDANCE_SCORE IS '출결 점수';
COMMENT ON COLUMN SCORES.WRITTEN_SCORE IS '필기 점수';
COMMENT ON COLUMN SCORES.PRACTICAL_SCORE IS '실기 점수';
COMMENT ON COLUMN SCORES.TEST_DATE IS '시험일';

SELECT *
FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'SCORES';


SELECT PF_CODE  INTO V_CODE
FROM PROFESSORS;
WHERE V_ID = PF_ID

SELECT OCRS_CODE INTO V_OCRS
FROM OPEN_COURSES
WHERE V_CODE = PF_CODE




